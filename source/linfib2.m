function YC=linfib2(T0,T1,a,b,x,y_shift)
%LINFIB
%    YC = LINFIB(T0,T1,A,X)

%    This function was generated by the Symbolic Math Toolbox version 6.0.
%    05-Oct-2014 22:15:29

T0i= T0;
T0 = T0 * (pi/180.);
T1 = T1 * (pi/180.);

x = x-a/2.;

% special case (T0=T1 && T0i=90) straight 90 fibers
if( T0 == T1 && T0i == 90)
    x(1:length(x))=y_shift;
    YC=linspace(-b/2,b/2);
    return
end

for i=1:length(x) 
   
    % straight fibers
    if( T0 == T1 )
        if(T0i == 90)
            YC(i) = 0;
        else
            YC(i) = x(i)*tan(T0);
        end
        YC(i)= YC(i) + b/2.;
        
    % curved fibers
    else
        t1 = 0.5*a/(T1-T0);
        t2 = log(cos(T0));
        t3 = 2.*(T1-T0)*x(i)/a;
        
        if( 0.0 <= x(i) && x(i) <= a/2. )
            YC(i) = t1*( t2 - log(cos(T0 + t3)));
            
        elseif( -a/2.0 <= x(i) && x(i) <= 0.0 )
            YC(i) = t1*(-t2 + log(cos(T0 - t3)));
            
        else
            YC(i)=NaN;
        end
        YC(i)= YC(i) + b/2.;
    end
    YC(i) = YC(i) + y_shift;

        
%     elseif( 0.0 <= x(i) && x(i) <= a/2. )
%         YC(i)= ( 0.5*a/(T1-T0)) * ( log(cos(T0)) - log(cos(T0 + 2.*(T1-T0)*x(i)/a) ) );
%         YC(i)= YC(i) + b/2.;
%     elseif( -a/2.0 <= x(i) && x(i) <= 0.0 )
%         YC(i)= ( 0.5*a/(T1-T0)) * (-log(cos(T0)) + log(cos(T0 - 2.*(T1-T0)*x(i)/a) ) );
%         YC(i)= YC(i) + b/2.;
%     else
%         YC(i)=NaN;
%     end
%     
%     YC(i) = YC(i) + y_shift;
    
end
